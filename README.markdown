# Treealoc: Субаллокатор памяти на основе B-дерева

## Описание
Проект представляет собой субаллокатор памяти, использующий B-дерево для управления выделенными блоками. Субаллокатор инкапсулирован в динамическую библиотеку `libtreealoc.so`, которая перехватывает стандартные функции `malloc`, `free`, `realloc` и `calloc`. Визуализация структуры B-дерева реализована с использованием SDL2 и SDL_ttf.

### Основные компоненты
- **B-дерево (`b_tree.c`)**: Хранит информацию о блоках памяти (размер, адрес, статус). Реализованы вставка, удаление, поиск лучшего блока.
- **Субаллокатор (`treealoc.c`)**: Перехватывает `malloc`, `free`, `realloc`, `calloc` и управляет памятью через B-дерево.
- **Визуализация (`visual.c`)**: Отображает B-дерево в графическом окне, показывая размеры, адреса и статус блоков.
- **Тестовый проект (`test.c`)**: Демонстрирует работу субаллокатора с различными сценариями.

### Почему B-дерево?
B-дерево выбрано для субаллокатора, так как оно:
- Обеспечивает быстрый поиск подходящих свободных блоков (O(log n)).
- Поддерживает сбалансированную структуру, минимизируя фрагментацию.
- Подходит для обновляемых индексов, где требуется частое выделение/освобождение памяти.

### Перехват функций
- Функции `malloc`, `free`, `realloc`, `calloc` перехватываются с помощью опции `--wrap` компоновщика.
- Переопределение `calloc` упрощает интеграцию и обеспечивает единообразное управление памятью через B-дерево.

## Установка и сборка
### Зависимости
- GCC
- SDL2 (`libsdl2-dev`)
- SDL2_ttf (`libsdl2-ttf-dev`)
- Шрифт `arial.ttf` (поместите в директорию проекта)

### Сборка
```bash
make
```

### Запуск
```bash
export LD_LIBRARY_PATH=.:$LD_LIBRARY_PATH
./test
```

## Использование
1. Программа запускает визуализацию в отдельном потоке.
2. Выполняются тесты:
   - Простое выделение/освобождение (`malloc`, `free`).
   - Изменение размера блока (`realloc`).
   - Выделение с обнулением (`calloc`).
   - Интенсивное выделение/освобождение.
3. Визуализация показывает структуру B-дерева, где каждый узел отображает размер, адрес и статус блока.

## Ограничения
- Функция `btree_find_best_fit` требует доработки для полного обхода дерева.
- Полное удаление узлов в `btree_remove` не реализовано (только пометка как свободный).
- Для больших деревьев может потребоваться увеличение параметра `T`.

## Лицензия
MIT